// This file was generated by PermissionsDispatcher. Do not modify!
package com.zxing.lib.scaner.activity;

import android.support.v4.app.ActivityCompat;

import java.lang.ref.WeakReference;

import permissions.dispatcher.GrantableRequest;
import permissions.dispatcher.PermissionUtils;

public final class ActivityScanerCodePermissionsDispatcher2 {
  private static final int REQUEST_CONNECTDEVICE = 0;

  private static final String[] PERMISSION_CONNECTDEVICE = new String[] {"android.permission.ACCESS_COARSE_LOCATION","android.permission.BLUETOOTH"};

  private static GrantableRequest PENDING_CONNECTDEVICE;

  private ActivityScanerCodePermissionsDispatcher2() {
  }

  static void connectDeviceWithPermissionCheck(ActivityScanerCode2 target, String imei) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_CONNECTDEVICE)) {
      target.connectDevice(imei);
    } else {
      PENDING_CONNECTDEVICE = new MainActivityConnectDevicePermissionRequest(target, imei);
      ActivityCompat.requestPermissions(target, PERMISSION_CONNECTDEVICE, REQUEST_CONNECTDEVICE);
    }
  }

  static void onRequestPermissionsResult(ActivityScanerCode target, int requestCode, int[] grantResults) {
    switch (requestCode) {
      case REQUEST_CONNECTDEVICE:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        if (PENDING_CONNECTDEVICE != null) {
          PENDING_CONNECTDEVICE.grant();
        }
      }
      PENDING_CONNECTDEVICE = null;
      break;
      default:
      break;
    }
  }

  private static final class MainActivityConnectDevicePermissionRequest implements GrantableRequest {
    private final WeakReference<ActivityScanerCode2> weakTarget;

    private final String imei;

    private MainActivityConnectDevicePermissionRequest(ActivityScanerCode2 target, String imei) {
      this.weakTarget = new WeakReference<ActivityScanerCode2>(target);
      this.imei = imei;
    }

    @Override
    public void proceed() {
      ActivityScanerCode2 target = weakTarget.get();
      if (target == null) return;
      ActivityCompat.requestPermissions(target, PERMISSION_CONNECTDEVICE, REQUEST_CONNECTDEVICE);
    }

    @Override
    public void cancel() {
    }

    @Override
    public void grant() {
      ActivityScanerCode2 target = weakTarget.get();
      if (target == null) return;
      target.connectDevice(imei);
    }
  }
}
